<Window x:Class="BlockClocksWindows.Config"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"        
        xmlns:local="clr-namespace:BlockClocksWindows"         
        xmlns:properties="clr-namespace:BlockClocksWindows.Properties" 
        mc:Ignorable="d"
        ShowInTaskbar="False"        
        Width="700"
        SizeToContent="WidthAndHeight"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterOwner" 
        AllowsTransparency="True"
        WindowStyle="None"
        Title="Config"
        Loaded="Window_Loaded"
        Closing="Window_Closing"
        KeyUp="Window_KeyUp"
        >



    <Window.Resources>
        <local:BoolRadioConverter x:Key="BoolRadioConverter" />
        <local:BoolRadioConverter x:Key="InverseBoolRadioConverter" Inverse="True" />
        <!-- Default settings for controls -->
        <Style TargetType="{x:Type Label}">
            <Setter Property="Margin" Value="0,3,5,5" />
            <Setter Property="Padding" Value="0,0,0,5" />
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="0,0,0,5" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Width" Value="70" />
            <Setter Property="Height" Value="25" />
            <Setter Property="Margin" Value="5,0,0,0" />
            <Setter Property="Background" Value="#EEE"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style TargetType="{x:Type ListBox}">
            <Setter Property="BorderBrush" Value="#CCC"/>
        </Style>
        <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#EEE" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="BorderGradient" StartPoint="0,0" EndPoint="1,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#333" Offset="0.0"/>
                    <GradientStop Color="#BBB" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#EEE" />

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="2"
                      Background="{StaticResource NormalBrush}"
                      BorderThickness="1" />
                                    <Border 
                      Grid.Column="0"
                      CornerRadius="2,0,0,2" 
                      Margin="1" 
                      Background="{StaticResource WindowBackgroundBrush}" 
                      BorderThickness="0,0,1,0" />
                                <Path 
                      x:Name="Arrow"
                      Grid.Column="1"     
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Fill="Black"
                      Data="M 0 0 L 4 4 L 8 0 Z"/>  
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>


        <Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton 
                                 Name="ToggleButton" 
                                 Template="{StaticResource ComboBoxToggleButton}" 
                                 Grid.Column="2" 
                                 Focusable="false"
                                 IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                 ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter
                                Name="ContentSite"
                                IsHitTestVisible="False" 
                                Margin="3,3,23,3"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left" />   
                            <TextBox x:Name="PART_EditableTextBox"
                                 Style="{x:Null}" 
                                 Template="{StaticResource ComboBoxTextBox}" 
                                 HorizontalAlignment="Left" 
                                 VerticalAlignment="Center" 
                                 Margin="3,3,23,3"
                                 Focusable="True" 
                                 Background="Transparent"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True" 
                                Focusable="False"
                                PopupAnimation="Slide">     
                                <Grid 
                                  Name="DropDown"
                                  SnapsToDevicePixels="True"                
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                        x:Name="DropDownBorder"
                                        Background="{StaticResource WindowBackgroundBrush}"
                                        BorderThickness="1"/>       
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Border BorderBrush="{StaticResource BorderGradient}" BorderThickness="2">
        <StackPanel>
            <Button x:Name="Close" Height="25" Width="25" Grid.Column="2" Grid.Row="4" Cursor="Hand" Background="Transparent" BorderThickness="0" BorderBrush="Transparent" HorizontalAlignment="Right" VerticalAlignment="Top" PreviewMouseDown="Close_PreviewMouseDown" >
                <ContentControl>
                    <Image Height="20" Width="20" Source="quit-dark.png" />
                </ContentControl>
            </Button>
            <Grid Margin="30,0,30,20">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TabControl Grid.Row="0" x:Name="Tabs">
                    <TabControl.Resources>
                        <Style TargetType="TabItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="TabItem">
                                        <Border Name="Border" BorderThickness="0,0,0,0" BorderBrush="Gainsboro" CornerRadius="4,4,4,4" Margin="2,0">
                                            <ContentPresenter x:Name="ContentSite"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            ContentSource="Header"
                                            Margin="10,2,10,4"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="LightSkyBlue" />
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="False">
                                                <Setter TargetName="Border" Property="Background" Value="#EEE" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style TargetType="TabControl">
                            <Setter Property="Template" >
                                <Setter.Value>
                                    <ControlTemplate TargetType="TabControl">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="40"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <StackPanel Grid.Row="0">
                                                <!--Allow to host the tabitem header within the first row of the grid -->
                                                <TabPanel IsItemsHost="True"/>
                                            </StackPanel>
                                            <Border Grid.Row="1"                                 
                                    BorderThickness="0" 
                                    CornerRadius="0,5,5,5" 
                                    Margin="0,0,5,5" 
                                    Background="#00000000" 
                                    SnapsToDevicePixels="True">
                                                <!--Using ContentSource set to SelectedContent we will focus the content of the tabitem -->
                                                <ContentPresenter ContentSource="SelectedContent" HorizontalAlignment="Center"/>
                                            </Border>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TabControl.Resources>

                    <TabItem Header="Link Wallet">
                        <Grid>
                            <Grid.Resources>

                            </Grid.Resources>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>



                            <!-- Left,Top,Right,Bottom margins-->

                            <Label Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" >
                                <TextBlock TextWrapping="Wrap">To link a wallet, send the ADA amount from your wallet containing a clock to itself.<LineBreak />
                    Once the transaction confirms on the block chain find the transaction id within your wallet and paste it below
                                </TextBlock>
                            </Label>
                            <Label Grid.Column="0" Grid.Row="2">ADA Amount:</Label>
                            <TextBox Name="ADAAmount" Grid.Column="1" Grid.Row="2" IsReadOnly="True"/>
                            <Label Name="TransactionId" Grid.Column="0" Grid.Row="3">Transaction id:</Label>
                            <TextBox Name="TransactionAddress" Grid.Column="1" Grid.Row="3" TextChanged="TransactionAddress_LostFocus" />

                            <Label Name="WalletLabel" Grid.Column="0" Grid.Row="4">Linked address:</Label>
                            <TextBox Name="WalletAddress" Grid.Column="1" Grid.Row="4" IsEnabled="False" Text="{Binding Path=LinkedAddress}" LostFocus="WalletAddress_LostFocus" />
                            <Button x:Name="Refresh" Height="25" Width="25" Grid.Column="2" Grid.Row="4" Cursor="Hand" Background="Transparent" BorderThickness="0" BorderBrush="Transparent" HorizontalAlignment="Right" VerticalAlignment="Top" PreviewMouseDown="Refresh_PreviewMouseDown" >
                                <ContentControl>
                                    <Image Height="20" Width="20" Source="refresh.png" />
                                </ContentControl>
                            </Button>
                        </Grid >
                    </TabItem>
                    <TabItem Header="NFTs Layout" Name="LayoutTab">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <Grid Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="1" />
                                    <RowDefinition Height="50" />
                                </Grid.RowDefinitions>

                                <ListBox Name="NFTItems" Margin="0,0,20,0" Grid.Column="0" Grid.Row="0" Grid.RowSpan="4" Width="300" Height="400"
                         ItemsSource="{Binding Source={x:Static properties:Settings.Default}, Path=NFTItems, Mode=TwoWay}" SelectionChanged="NFTItems_SelectionChanged"></ListBox>
                                <Button Name="AddWindow" Margin="0,10,0,0" Grid.Column="0" Grid.Row="4" Content="Add NFT" Width="100" Height="30" HorizontalAlignment="Left" Click="AddWindow_Click"/>
                                <Button Name="RemoveWindow" Margin="0,10,20,0" Grid.Column="0" Grid.Row="4" Content="Remove NFT" Width="100" Height="30" HorizontalAlignment="Right" Click="RemoveWindow_Click"/>

                                <StackPanel Grid.Column="1" Grid.Row="0" Width="Auto">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="80" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <Label Grid.Column="0" Grid.Row="0" VerticalContentAlignment="Center" Margin="0,4,0,0" Height="30">NFT:</Label>
                                    <ComboBox Name="Clock" Grid.Column="1" Grid.Row="0" 
                                      Height="30"
                                      ItemsSource="{Binding Path=Clocks}"  
                                      SelectedValue="{Binding Source={x:Static local:App.Instance},Path=ActiveClock, Mode=TwoWay}"                                      
                                      SelectionChanged="Clock_SelectionChanged">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <TextBlock Text="{Binding Path=name}"/>
                                                </Grid>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>

                                    <Label Grid.Column="0" Grid.Row="1" Margin="0,10,0,0">Style:</Label>
                                    <RadioButton Grid.Column="1" Grid.Row="1" x:Name = "AlwaysOnTop" Content = "Always on Top" HorizontalAlignment = "Left"  
                                 Margin = "0,10,0,0" VerticalAlignment = "Top" Checked="AlwaysOnTop_Checked"
                                 GroupName = "WindowStyle" Width = "100" />

                                    <RadioButton Grid.Column="1" Grid.Row="1" x:Name = "AlwaysInBackground" Content = "In background" HorizontalAlignment = "Left"  
                                 Margin = "150,10,0,0" VerticalAlignment = "Top"  
                                 GroupName = "WindowStyle" Width = "100" Checked="AlwaysInBackground_Checked"/>

                                    <Label Name="ShowUTCLabel" Grid.Column="0" Grid.Row="2" Margin="0,10,10,0">Show UTC:</Label>
                                    <CheckBox Grid.Column="1" Grid.Row="2" Margin="0,5,0,0" HorizontalAlignment="Left" Name="ShowUTC" VerticalAlignment="Center" IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=UTCDetails, Mode=TwoWay}" Checked="ShowUTC_Checked" Unchecked="ShowUTC_Unchecked"></CheckBox>

                                    <Label Grid.Column="0" Grid.Row="3" Height="30" Margin="0,10,0,0" VerticalAlignment="Top" Name="TransparencyLabel" Visibility="Collapsed">Opacity:</Label>
                                    <Slider Grid.Column="1" Grid.Row="3" Margin="0,10,0,0" Maximum="255" Minimum="0" Width="200" HorizontalAlignment="Left" Name="Transparency" Visibility="Collapsed" ValueChanged="Transparency_ValueChanged" ></Slider>
                                    </Grid>
                                </StackPanel>

                                
                            </Grid>
                        </Grid >
                    </TabItem>
                </TabControl>

                <Label Grid.Row="1" Margin="0,40,0,6">Status:</Label>
                <Label Grid.Row="1" Margin="50,40,0,6" Name="Status">Waiting for input</Label>
                <Button x:Name="QuitApp" Margin="50,40,0,6" Height="25" Width="80" Grid.Row="1" Cursor="Hand" BorderThickness="0" BorderBrush="Transparent" HorizontalAlignment="Right" VerticalAlignment="Top" PreviewMouseDown="QuitApp_PreviewMouseDown"
                        Content="Quit App" Background="#aa0000" Foreground="#ffffff">
                </Button>
            </Grid>
        </StackPanel>
    </Border>
</Window>
